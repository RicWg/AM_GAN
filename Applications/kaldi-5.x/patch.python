--- tools/extras/check_dependencies.sh.orig	2019-05-01 13:14:02.258441513 -0500
+++ tools/extras/check_dependencies.sh	2019-05-01 13:18:26.991546574 -0500
@@ -87,12 +87,6 @@
 fi
 
 pythonok=true
-if ! have python2.7; then
-  echo "$0: python2.7 is not installed"
-  add_packages python2.7
-  pythonok=false
-fi
-
 if ! have python3; then
   echo "$0: python3 is not installed"
   add_packages python3
@@ -102,30 +96,6 @@
 (
 #Use a subshell so that sourcing env.sh does not have an influence on the rest of the script
 [ -f ./env.sh ] && . ./env.sh
-if $pythonok && ! have python2; then
-  mkdir -p $PWD/python
-  echo "$0: python2.7 is installed, but the python2 binary does not exist." \
-       "Creating a symlink and adding this to tools/env.sh"
-  ln -s $(command -v python2.7) $PWD/python/python2
-  echo "export PATH=$PWD/python:\${PATH}" >> env.sh
-fi
-
-if [[ -f $PWD/python/.use_default_python && -f $PWD/python/python ]]; then
-  rm $PWD/python/python
-fi
-
-if $pythonok && have python && [[ ! -f $PWD/python/.use_default_python ]]; then
-  version=$(python 2>&1 --version | awk '{print $2}')
-  if [[ $version != "2.7"* ]] ; then
-    echo "$0: WARNING python 2.7 is not the default python. We fixed this by" \
-         "adding a correct symlink more prominently on the path."
-    echo " ... If you really want to use python $version as default, add an" \
-         "empty file $PWD/python/.use_default_python and run this script again."
-    mkdir -p $PWD/python
-    ln -s $(command -v python2.7) $PWD/python/python
-    echo "export PATH=$PWD/python:\${PATH}" >> env.sh
-  fi
-fi
 )
 
 mathlib_missing=false
